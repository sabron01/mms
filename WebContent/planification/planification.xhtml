<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html">

<h:body>

	<ui:composition
		template="/template/planification/planificationLayout.xhtml">
		<ui:define name="contentHeader">
			<h1>
				Planification <small>Paneau de configuration</small>
			</h1>
			<ol class="breadcrumb">
				<li><h:link outcome="/home/dashboard.xhtml">
						<i class="fa fa-home"></i>Home
					</h:link></li>
			</ol>
		</ui:define>

		<ui:define name="content">

			<div class="row">
				<div class="col-md-3">
					<div class="box box-primary">
						<div class="box-header">
							<h4 class="box-title">Liste des Tâches</h4>
						</div>
						<div class="box-body">
							<div class="box box-primary">
								<div class="box-header">
									<h3 class="box-title">Créer Tâche</h3>
								</div>
								<div class="box-body">
									<h:form>
										<div class="btn-group"
											style="width: 100%; margin-bottom: 10px;">
											<button type="button" id="color-chooser-btn"
												class="btn btn-danger btn-block btn-sm dropdown-toggle"
												data-toggle="dropdown">
												Color <span class="caret"></span>
											</button>
											<ul class="dropdown-menu" id="color-chooser">
												<li><a class="text-green" href="#"><i
														class="fa fa-square"></i> Green</a></li>
												<li><a class="text-blue" href="#"><i
														class="fa fa-square"></i> Blue</a></li>
												<li><a class="text-navy" href="#"><i
														class="fa fa-square"></i> Navy</a></li>
												<li><a class="text-yellow" href="#"><i
														class="fa fa-square"></i> Yellow</a></li>
												<li><a class="text-orange" href="#"><i
														class="fa fa-square"></i> Orange</a></li>
												<li><a class="text-aqua" href="#"><i
														class="fa fa-square"></i> Aqua</a></li>
												<li><a class="text-red" href="#"><i
														class="fa fa-square"></i> Red</a></li>
												<li><a class="text-fuchsia" href="#"><i
														class="fa fa-square"></i> Fuchsia</a></li>
												<li><a class="text-purple" href="#"><i
														class="fa fa-square"></i> Purple</a></li>
											</ul>
										</div>
										<div class="form-group">
											<h:outputLabel value="Séjour Médical" />
											<h:selectOneMenu id="medicalJourney"
												styleClass="form-control"
												value="#{PlanificationController.medicalJourney}">
												<f:selectItems value="#{PlanificationController.list}"
													var="sejour" itemValue="#{sejour}"
													itemLabel="#{sejour.identifier}" />
												<f:converter converterId="medicalJourneyConverter" />
											</h:selectOneMenu>
										</div>
										<div class="form-group">
											<h:outputLabel value="Services inclus" />
											<h:selectOneMenu id="service" styleClass="form-control"
												value="#{PlanificationController.service}"
												layout="lineDirection">
												<f:selectItems value="#{DataParameterController.services}"
													var="service" itemValue="#{service}"
													itemLabel="#{service.label}" />
												<f:converter converterId="serviceConverter" />
												<f:ajax immediate="true" execute="@this"
													listener="#{PlanificationController.updateListEmployee}"
													render="employee" />
											</h:selectOneMenu>
										</div>
										<div class="form-group">
											<h:outputLabel value="Employee" />
											<div class="input-group">
												<h:selectOneMenu styleClass="form-control" id="employee"
													value="#{PlanificationController.employee}">
													<f:selectItems value="#{PlanificationController.employees}"
														var="employee" itemValue="#{employee}"
														itemLabel="#{employee.firstName } #{employee.lastName} -- { #{employee.function.title} } " />
													<f:converter converterId="employeeConverter" />
												</h:selectOneMenu>
											</div>
										</div>
										<div class="btn-group"
											style="width: 100%; margin-bottom: 10px;">
											<button type="button" id="add-new-event"
												class="btn btn-block btn-default">Add</button>
										</div>
									</h:form>
								</div>
							</div>
						</div>
						<!-- /.box-body -->
					</div>
					<!-- /. box -->
					<div class="box box-primary">
						<div class="box-header">
							<h4 class="box-title">Liste des Tâches</h4>
						</div>

						<!-- the events -->
						<div id='external-events'>
							<div class='external-event bg-green'>Lunch</div>
							<div class='external-event bg-red'>Go home</div>
							<div class='external-event bg-aqua'>Do homework</div>
							<div class='external-event bg-yellow'>Work on UI design</div>
							<div class='external-event bg-navy'>Sleep tight</div>
							<p>
								<input type='checkbox' id='drop-remove' /> <label
									for='drop-remove'>remove after drop</label>
							</p>
						</div>
					</div>

				</div>

				<!-- /.col -->
				<div class="col-md-9">
					<div class="box box-primary">
						<div class="box-body no-padding">
							<!-- THE CALENDAR -->
							<div id="calendar"></div>
						</div>
						<!-- /.box-body -->
					</div>
					<!-- /. box -->
				</div>
				<!-- /.col -->
			</div>
			<!-- /.row -->
			<script type="text/javascript">
            $(function() {
                /* initialize the external events
                 -----------------------------------------------------------------*/
                function ini_events(ele) {
                    ele.each(function() {

                        // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                        // it doesn't need to have a start or end
                        var eventObject = {
                            title: $.trim($(this).text()) // use the element's text as the event title
                        };

                        // store the Event Object in the DOM element so we can get to it later
                        $(this).data('eventObject', eventObject);

                        // make the event draggable using jQuery UI
                        $(this).draggable({
                            zIndex: 1070,
                            revert: true, // will cause the event to go back to its
                            revertDuration: 0  //  original position after the drag
                        });

                    });
                }
                ini_events($('#external-events div.external-event'));

                /* initialize the calendar
                 -----------------------------------------------------------------*/
                //Date for the calendar events (dummy data)
                var date = new Date();
                var d = date.getDate(),
                        m = date.getMonth(),
                        y = date.getFullYear();
                $('#calendar').fullCalendar({
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    buttonText: {//This is to add icons to the visible buttons
                        prev: '<span class="fa fa-caret-left"></span>',
                        next: '<span class="fa fa-caret-right"></span>',
                        today: 'today',
                        month: 'month',
                        week: 'week',
                        day: 'day'
                    },
                    //Random default events
                    events:  {
                        cache: false,
                        crossDomain: true,
                        dataType: 'json',
                        url: 'http://localhost:8080/mms/webresources/tasks/list',
                        type: 'GET',
                    },
                    editable: true,
                    droppable: true, // this allows things to be dropped onto the calendar !!!
                    drop: function(date, allDay) { // this function is called when something is dropped

                        // retrieve the dropped element's stored Event Object
                        var originalEventObject = $(this).data('eventObject');

                        // we need to copy it, so that multiple events don't have a reference to the same object
                        var copiedEventObject = $.extend({}, originalEventObject);

                        // assign it the date that was reported
                        copiedEventObject.start = date;
                        copiedEventObject.allDay = allDay;
                        copiedEventObject.backgroundColor = $(this).css("background-color");
                        copiedEventObject.borderColor = $(this).css("border-color");

                        // render the event on the calendar
                        // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                        $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

                        // is the "remove after drop" checkbox checked?
                        if ($('#drop-remove').is(':checked')) {
                            // if so, remove the element from the "Draggable Events" list
                            $(this).remove();
                        }

                    }
                });

                /* ADDING EVENTS */
                var currColor = "#f56954"; //Red by default
                //Color chooser button
                var colorChooser = $("#color-chooser-btn");
                $("#color-chooser  li  a").click(function(e) {
                    e.preventDefault();
                    //Save color
                    currColor = $(this).css("color");
                    //Add color effect to button
                    colorChooser
                            .css({"background-color": currColor, "border-color": currColor})
                            .html($(this).text()+' <span class="caret"></span>');
                });
                $("#add-new-event").click(function(e) {
                    e.preventDefault();
                    //Get value and make sure it is not null
                    var medicalJourney = $("#medicalJourney").val();
                    var service = $("#service").val();
                    var employee = $("#employee").val();
                    
                    var val = $("#new-event").val();
                    if (val.length == 0) {
                        return;
                    }

                    //Save Create Tache and return Id

                    //Create event
                    var event = $("<div />");
                    
                    event.css({"background-color": currColor, "border-color": currColor, "color": "#fff"}).addClass("external-event");
                    event.html(val+" "+service+" "+medicalJourney+" "+employee);
                    $('#external-events').prepend(event);

                    //Add draggable funtionality
                    ini_events(event);

                    //Remove event from text input
                    $("#new-event").val("");
                });
            });
        </script>
		</ui:define>
	</ui:composition>

</h:body>
</html>